plugins {
    id 'nebula.optional-base' version '5.0.3'
}

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'nebula.optional-base'

ext.graalVMVersion = "22.0.0.2"

dependencies {
    compile 'org.apache.commons:commons-lang3:3.12.0'
    compile 'org.apache.commons:commons-text:1.8'
    compile 'org.jbibtex:jbibtex:1.0.19'
    compile 'org.antlr:antlr4-runtime:4.9.3'
    compile 'org.yaml:snakeyaml:1.25', optional

    testCompile 'commons-io:commons-io:2.11.0'
    testCompile 'org.fusesource.jansi:jansi:2.4.0'
    testCompile 'org.citationstyles:styles:21.11'
    testCompile 'org.citationstyles:locales:22.2'
    testCompile 'com.carrotsearch:junit-benchmarks:0.7.2'
    testCompile "org.graalvm.sdk:graal-sdk:$graalVMVersion"
    testCompile "org.graalvm.js:js:$graalVMVersion"
    testCompile 'pl.pragmatists:JUnitParams:1.1.1'

    // compile-time-only dependency to jackson annotations to avoid
    // warnings during javadoc generation
    compileOnly "com.fasterxml.jackson.core:jackson-annotations:2.+"
    testCompileOnly "com.fasterxml.jackson.core:jackson-annotations:2.+"
}

task generateSources() {
    inputs.files fileTree(dir: projectDir, includes: [ 'templates/*', 'grammars/*' ])
    outputs.files fileTree(dir: 'src-gen', includes: [ '**/*.java', '**/*.dat' ])
    doLast {
        SourceGenerator sg = new SourceGenerator(project)
        sg.renderTemplates()
        sg.renderGrammars()
        sg.generateVersionFile()
    }
}

task cleanGeneratedSources(type: Delete) {
    delete 'src-gen'
}

// include generated sources
sourceSets.main.java.srcDirs 'src-gen/main/java'
sourceSets.main.resources.srcDirs 'src-gen/main/resources'

tasks['compileJava'].dependsOn(generateSources)
tasks['clean'].dependsOn(cleanGeneratedSources)

jar {
    // include license into jar
    from new File(project.rootDir, 'LICENSE.txt')
}

// define artifacts for upload
artifacts {
    archives jar
    archives packageJavadoc
    archives packageSources
}

// sign all artifacts
signing {
    required { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

// remove test dependencies and runtime dependencies
// from configuration-to-scope mapping
// this also removes them from the maven pom file
conf2ScopeMappings.mappings.remove(configurations.testCompile)
conf2ScopeMappings.mappings.remove(configurations.runtime)

uploadArchives {
    repositories {
        mavenDeployer {
            // sign artifacts before upload
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            
            // upload to sonatype OSS
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
                    password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
                    password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
            }
            
            // pom file details
            pom.project {
               name 'citeproc-java'
               packaging 'jar'
               description 'A Citation Style Language (CSL) Processor for Java.'
               url 'http://www.michel-kraemer.com'
 
               scm {
                   url 'scm:git:git://github.com/michel-kraemer/citeproc-java.git'
                   connection 'scm:git:git://github.com/michel-kraemer/citeproc-java.git'
                   developerConnection 'scm:git:git://github.com/michel-kraemer/citeproc-java.git'
               }
 
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'michel-kraemer'
                       name 'Michel Kraemer'
                       email 'michel@undercouch.de'
                   }
               }
           }
        }
    }
}
