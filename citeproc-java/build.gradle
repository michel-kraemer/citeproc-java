buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:1.0'
    }
}

apply plugin: 'maven'
apply plugin: 'signing'

import de.undercouch.gradle.tasks.download.Download

ext.citeprocProjectBase = 'https://bitbucket.org/fbennett/citeproc-js/'
ext.citeprocJsUrlBase = ext.citeprocProjectBase + 'raw/01297da0b8365851689d2c3d0a56e57147de1b67/'
ext.citeprocJsUrl = ext.citeprocJsUrlBase + 'citeproc.js'
ext.xmldomJsUrl = ext.citeprocJsUrlBase + 'xmldom.js'
ext.xmle4xJsUrl = ext.citeprocJsUrlBase + 'xmle4x.js'
ext.citeprocJsZip = '1.0.521.zip'
ext.citeprocJsZipUrl = ext.citeprocProjectBase + 'get/' + ext.citeprocJsZip
ext.citeprocTestSuiteZip = '9942299.zip'
ext.citeprocTestSuiteUrl = 'https://bitbucket.org/bdarcus/citeproc-test/get/' + ext.citeprocTestSuiteZip

configurations {
    // define a configuration for compile-time-only dependencies
    provided
}

dependencies {
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.jbibtex:jbibtex:1.0.11'
    compile 'org.antlr:antlr4-runtime:4.2'
    
    provided 'org.mozilla:rhino:1.7R4'
    
    testCompile 'org.fusesource.jansi:jansi:1.11'
    testCompile 'org.mozilla:rhino:1.7R4'
    testCompile 'org.citationstyles:styles:1.0.1-SNAPSHOT'
    testCompile 'org.citationstyles:locales:1.0.1-SNAPSHOT'
    testCompile 'com.carrotsearch:junit-benchmarks:0.7.0'
}

task downloadCiteprocJs(type: Download) {
    src citeprocJsUrl
    dest new File(projectDir, "src-gen/main/resources/de/undercouch/citeproc/citeproc.js")
    overwrite false
}

task downloadXmldomJs(type: Download) {
    src xmldomJsUrl
    dest new File(projectDir, "src-gen/main/resources/de/undercouch/citeproc/xmldom.js")
    overwrite false
}

task downloadXmle4xJs(type: Download) {
    src xmle4xJsUrl
    dest new File(projectDir, "src-gen/main/resources/de/undercouch/citeproc/xmle4x.js")
    overwrite false
}

task generateSources(dependsOn: [ downloadXmldomJs, downloadXmle4xJs, downloadCiteprocJs ]) {
    inputs.files fileTree(dir: projectDir, includes: [ 'templates/*', 'grammars/*',
        'src/main/resources/de/undercouch/citeproc/*.js',
        'src-gen/main/resources/de/undercouch/citeproc/*.js' ])
    outputs.files fileTree(dir: 'src-gen', includes: [ '**/*.java', '**/*.dat' ])
} << {
    SourceGenerator sg = new SourceGenerator(project)
    sg.renderTemplates()
    sg.renderGrammars()
    sg.filterScripts()
    sg.compileScripts()
    sg.generateVersionFile()
}

task cleanGeneratedSources(type: Delete) {
    delete 'src-gen'
}

task downloadCiteprocJsZip(type: Download) {
    src citeprocJsZipUrl
    dest new File(buildDir, "test-suite/${citeprocJsZip}")
    compress false
    overwrite false
}

task downloadTestSuite(type: Download) {
    src citeprocTestSuiteUrl
    dest new File(buildDir, "test-suite/${citeprocTestSuiteZip}")
    compress false
    overwrite false
}

task runTestSuite(dependsOn: [ downloadCiteprocJsZip, downloadTestSuite, testClasses ]) << {
    def tr = new CSLTestSuite(project, new File(buildDir, 'test-suite/' + citeprocTestSuiteZip),
        new File(buildDir, 'test-suite/' + citeprocJsZip))
    tr.compile()
    tr.fix()
    tr.run()
}

// include generated sources
sourceSets.main.java.srcDirs 'src-gen/main/java'
sourceSets.main.resources.srcDirs 'src-gen/main/resources'

idea.module {
    generatedSourceDirs += file('src-gen/main/java')
    generatedSourceDirs += file('src-gen/main/resources')
}

// include compile-time-only dependencies
sourceSets.main.compileClasspath += configurations.provided
eclipse.classpath.plusConfigurations << configurations.provided
idea.module.scopes.PROVIDED.plus += [configurations.provided]

tasks['compileJava'].dependsOn(generateSources)
tasks['eclipseClasspath'].dependsOn(generateSources)
tasks['ideaModule'].dependsOn(generateSources)
tasks['clean'].dependsOn(cleanGeneratedSources)

jar {
    // define OSGi bundle manifest
    manifest {
        name = 'citeproc-java'
        symbolicName = "de.undercouch.citeproc"
        vendor = 'Michel Kraemer'
        instruction 'Import-Package', '*,org.mozilla.javascript;resolution:=optional'
        instruction 'Export-Package', "de.undercouch.*;version=${version}"
    }
    
    // include license into jar
    from new File(project.rootDir, 'LICENSE.txt')
}

javadoc {
    //add compile-time-only dependencies
    classpath += configurations.provided
}

// define artifacts for upload
artifacts {
    archives jar
    archives packageJavadoc
    archives packageSources
}

// sign all artifacts
signing {
    required { gradle.taskGraph.hasTask(uploadArchives) }
    sign configurations.archives
}

// remove test dependencies and runtime dependencies
// from configuration-to-scope mapping
// this also removes them from the maven pom file
conf2ScopeMappings.mappings.remove(configurations.testCompile)
conf2ScopeMappings.mappings.remove(configurations.runtime)

uploadArchives {
    repositories {
        mavenDeployer {
            // sign artifacts before upload
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            
            // upload to sonatype OSS
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
                    password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
            }
            
            // pom file details
            pom.project {
               name 'citeproc-java'
               packaging 'jar'
               description 'A Citation Style Language (CSL) Processor for Java.'
               url 'http://www.michel-kraemer.com'
 
               scm {
                   url 'scm:git:git://github.com/michel-kraemer/citeproc-java.git'
                   connection 'scm:git:git://github.com/michel-kraemer/citeproc-java.git'
                   developerConnection 'scm:git:git://github.com/michel-kraemer/citeproc-java.git'
               }
 
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'michel-kraemer'
                       name 'Michel Kraemer'
                       email 'michel@undercouch.de'
                   }
               }
           }
        }
    }
}
